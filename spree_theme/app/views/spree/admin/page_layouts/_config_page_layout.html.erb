
<fieldset id="page_layout_container" class="">
  <% if @template_theme.present? %>  
      <legend align="center"><%= page_layout.title %></legend>
      <%= form_for :page_layout, :url=> update_resource_admin_template_theme_page_layout_path(@template_theme,page_layout) do |f|%>
        <div class="field">
          <%= label_tag :assigned_resource, Spree.t(:assigned_resource) %><br>
          <% page_layout_with_resource = Spree::PageLayout.includes(:section_pieces).where(["spree_page_layouts.id=? and spree_section_pieces.resources!=?", page_layout.id,''])
    
          %>
          <% if page_layout_with_resource.present? %>
            <% page_layout = page_layout_with_resource %>   
            <% page_layout.section_pieces.first.wrapped_resources.each_with_index{| wrapped_resource,idx | %>
              <%  
                  assigned_resource_id = @template_theme.assigned_resource_id(wrapped_resource.resource_class, page_layout, idx)   
                  onchange = "ajax_post('#{update_resource_admin_template_theme_page_layout_path(@template_theme,page_layout)}',this.form.id);"
              %>  
                <%= select_tag "assigned_resource_ids[#{page_layout.id}][]",options_from_collection_for_select(wrapped_resource.resource_class.resourceful(@template_theme ), :id, :name, assigned_resource_id ), include_blank: true, onchange: onchange, class: 'select2' %>
            <% } %>
          <% else %>
               <% assigned_resource_id = @template_theme.assigned_resource_id(SpreeTheme.taxon_class, page_layout) %>
               <%= select_tag "assigned_resource_ids[#{page_layout.id}][]",options_from_collection_for_select(SpreeTheme.taxon_class.resourceful(@template_theme ), :id, :name, assigned_resource_id ), include_blank: true,class: 'select2' %>      
          <% end %>
        </div>
        <div class="field">
          <% assigned_resources = @template_theme.assigned_resources(Spree::SpecificTaxon, page_layout)   %>
    
          <%= label_tag :specific_taxon, Spree.t(:specific_taxon) %><br>
          <%= hidden_field_tag :specific_taxon_ids, assigned_resources.collect(&:id).join(',') %>
        </div>
        
        <div class="form-buttons filter-actions actions" data-hook="buttons">
          <%= button Spree.t('actions.update'), 'icon-refresh' %>
          <span class="or"><%= Spree.t(:or) %></span>
          <%= button_link_to Spree.t('actions.cancel'), '', :icon => 'icon-remove', :onclick=>"$('#page_layout_container').hide();return false;" %>
        </div>
      <%end%>
  <% else %>
      <legend align="center"><%= page_layout.title %></legend>
      <div class="alpha twelve columns no-objects-found">
        <%= Spree.t(:no_resource_found, resource: I18n.t(:other, scope: 'activerecord.models.spree/page_layout')) %>,
      </div>
  <% end %>      
</fieldset> 

<% unless Rails.env.test? %>
  <script>
  // copy from spree/backend/assets/javascripts/admin/taxon_autocomlete.js.erb
// assign resource to theme
  $(document).ready(function () {
    'use strict';
    if ($('#specific_taxon_ids').length > 0) {
      $('#specific_taxon_ids').select2({
        placeholder: Spree.translations.taxon_placeholder,
        multiple: true,
        initSelection: function (element, callback) {
          var url = Spree.url(Spree.routes.taxons_search, {
            ids: element.val()
          });
          return $.getJSON(url, null, function (data) {
            return callback(data['taxons']);
          });
        },
        ajax: {
          url: Spree.routes.taxons_search,
          datatype: 'json',
          data: function (term, page) {
            return {
              per_page: 50,
              page: page,
              q: {
                name_cont: term
              }
            };
          },
          results: function (data, page) {
            var more = page < data.pages;
            console.log(more)
            return {
              results: data['taxons'],
              more: more
            };
          }
        },
        formatResult: function (taxon) {
          return taxon.pretty_name;
        },
        formatSelection: function (taxon) {
          return taxon.pretty_name;
        }
      });
      $('.select2-container').css({width: '20em'});
    }
  });  
  
  </script>
<% end %>
